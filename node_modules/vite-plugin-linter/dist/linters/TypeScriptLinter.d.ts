import ts from "typescript";
import Linter, { LinterResult } from "../Linter";
export interface TypeScriptLinterOptions extends ts.CompilerOptions {
    /**
     * Path to the TypeScript config file. Defaults to tsconfig.json
     */
    configFilePath?: string;
}
export default class TypeScriptLinter implements Linter<ts.Diagnostic> {
    readonly name = "TypeScriptLinter";
    private formatHost;
    private options;
    private optionsLoadedFromFile;
    private watchingFiles;
    private watcher;
    constructor(options?: TypeScriptLinterOptions);
    format(results: ts.Diagnostic[]): Promise<string>;
    lintBuild(files: string[]): Promise<readonly ts.Diagnostic[]>;
    lintServe(files: string[], output: (result: LinterResult<ts.Diagnostic>) => void): void;
    private getCustomTypeRootFiles;
    private loadOptions;
}
